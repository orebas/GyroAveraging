data_all <- list.files(path = ".",     # Identify all csv files in folder
pattern = "*.out", full.names = TRUE) %>%
lapply(read_csv) %>%                                            # Store all files in list
bind_rows                                                       # Combine data sets into one data set
```
data_all <- list.files(path = ".",    pattern = "*.out", full.names = TRUE)
lapply(read_csv) %>%                                            # Store all files in list
bind_rows                                                       # Combine data sets into one data set
```
data_all <- list.files(path = ".",    pattern = "*.out", full.names = TRUE)
lapply(read_csv)                                             # Store all files in list
bind_rows                                                       # Combine data sets into one data set
```
clear()
clear
data_all <- list.files(path = ".",     # Identify all csv files in folder
pattern = "*.out", full.names = TRUE) %>%
lapply(read_csv) %>%                                            # Store all files in list
bind_rows
library(ggplot2)
library(tidyverse)
library(dplyr)
library(plyr)
library(readr)
library(tikzDevice)
data_all <- list.files(path = ".",     # Identify all csv files in folder
pattern = "*.out", full.names = TRUE) %>%
lapply(read_csv) %>%                                            # Store all files in list
bind_rows
print(data_all)
print(plot1)
plot1
print(plot)
print(plot1)
dev.off()
data_all <- list.files(path = ".",     # Identify all csv files in folder
pattern = "temp.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                                            # Store all files in list
bind_rows
print(data_all)
uniqModels <- unique(data_all[,1])
ggsave.latex(myPlot, filename = "test.pdf", label = "fig:Cars",
caption = "A demo plot", height = 5, width = 5)
print(myPlot)
dev.off()
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
myPlot <- ggplot(data=data_double[data_double$function_name == "Smooth_exp",],aes( N,max_error, color=calculator,linetype=calculator))+geom_line()+geom_point() + scale_y_continuous(trans="log10", breaks = c(.1,.01,.001,1e-4,1e-5,1e-6,1e-7,1e-8,1e-9,1e-10,1e-11)) + scale_x_continuous(trans="log2",breaks=c(2,4,8 ,16,32,64,128,256))
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
data_all <- list.files(path = ".",     # Identify all csv files in folder
pattern = "temp.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                                            # Store all files in list
bind_rows
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
tikz(file = paste(val,".tex"),
standAlone=F,
width = 7,
height = 3,)
tikzDevice::tikz(file = paste(val,".tex"),
standAlone=F,
width = 7,
height = 3)
#tikzDevice::tikz(file = paste(val,".tex"),
#     standAlone=F,
#     width = 7,
#     height = 3)
myPlot <- ggplot(data=data_double[data_double$function_name == val,],aes( N,max_error, color=calculator,linetype=calculator))+geom_line()+geom_point() + scale_y_continuous(trans="log10", breaks = c(.1,.01,.001,1e-4,1e-5,1e-6,1e-7,1e-8,1e-9,1e-10,1e-11)) + scale_x_continuous(trans="log2",breaks=c(2,4,8 ,16,32,64,128,256))
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
print("here")
myPlot <- ggplot(data=data_double[data_double$functionname == val,],aes( N,maxerror, color=calculator,linetype=calculator))+geom_line()+geom_point() + scale_y_continuous(trans="log10", breaks = c(.1,.01,.001,1e-4,1e-5,1e-6,1e-7,1e-8,1e-9,1e-10,1e-11)) + scale_x_continuous(trans="log2",breaks=c(2,4,8 ,16,32,64,128,256))
uniqFuncs <- unique(data_all[,1])
data_all = filter (data_all, calculator != "CPUDCTnopad")
data_double = filter(data_all, bytes == 8)
data_float = filter(data_all, bytes == 4)
icounter <- 1
for (funcName in uniqFuncs){
tikzDevice::tikz( file=str_c(funcName, ".tex"), standAlone=F, width=7, height=3)
print("here")
myPlot <- ggplot(data=data_double[data_double$functionname == val,],aes( N,maxerror, color=calculator,linetype=calculator))+geom_line()+geom_point() + scale_y_continuous(trans="log10", breaks = c(.1,.01,.001,1e-4,1e-5,1e-6,1e-7,1e-8,1e-9,1e-10,1e-11)) + scale_x_continuous(trans="log2",breaks=c(2,4,8 ,16,32,64,128,256))
print (myPlot)
dev.off()
}
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
source('C:/Users/oreba/Documents/GyroAveraging/git/GyroAveraging/R/PlotAssembly.R', echo=TRUE)
